<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="SavedCourseRowDelete.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAAA8pJREFUeF7t
        3dFxW1UUhtGUkBIowSVQAiWkBDqhhJRACSmBEiiBDmLOnSwe4LOJw9jMVrTXjGYy/iz5P9eW8ia9W2ut
        tdZaa6211lprksfHx/fn9uHz58+fzu238+9vcu7z+7n9ev75wUOulzoX7eG/XPTneKwHD7++5lywT18u
        3eu5nhEefv2bc60+fLlkb2Jfjr7G6/abuB7bj1nPuV4qXK9Xdx77Dz9mPce1CvnF3C3k9RzXKeQXc7eQ
        13Ncp5BfzN1C/v44391w7DnsuhuOPYddd8Ox57Drbjj2HHbdDceew6674dgz2RjyeOaGPJ+9IY9nbsjz
        2RvyeOaGPJ+9IY9nbsjz2RvyeOaGPJ+9IY9nbsjz2RvyeOaGPJ+9IY9nbsjz2RvyeOaGPJ+9IYcccsgh
        hxxyyCHPZ2/IIYcccsghhxxyyPPZG3LIIYcccsghhxzyfPaGHHLIIYcccsghhzyfvSGHHHLIIYcccsgh
        z2dvyCGHHHLIIYcccsjz2RtyyCGHHHLIIYcc8nz2hhxyyCGHHHLIIYc8n70hhxxyyCGHHHLIIc9nb8gh
        hxxyyCGHHHLI89kbcsghhxxyyCGHHPJ89oYccsghhxxyyCGHPJ+9IYcccsghhxxyyCHPZ2/IIYcccsgh
        hxxyyPPZG3LIIYcccsghhxzyfPaGHHLIIYcccsghhzyfvSGHHHLIIYcccsghz2dvyCGHHHLIIYcccsjz
        2RtyyCGHHHLIIYcc8nz2hhxyyCGHHHLIIYc8n70hhxxyyCGHHHLIIc9nb8ghhxxyyCGHHHLI89kbcsgh
        hxxyyCGHHPJ89oYccsghhxxyyCGHPJ+9IYcccsghhxxyyCHPZ2/IIYcccsghhxxyyPPZG3LIIYcccsgh
        hxzyfPaGHHLIIYcccsghhzyfvSGHHHLIIYcccsghz2dvyCGHHHLIIYcccsjz2RtyyCGHHHLIIYcc8nz2
        hhxyyCGHHHLIIYc8n70hhxxyyCGHHHLIIc9nb8jjmRvyfPaGPJ65Ic9nb8jjmRvyfPaGPJ65Ic9nb8jj
        mRvyfPaGPJ65Ic93vUOtzf/0g28Z62y83jb/Sb5lvvMLePKt58/Xf/YtY10bzf2b8/Xbeff1M/YXu2Pq
        L+FM++sDI5589p6v384bf5+9D19mf1d+dLzbcP5iPhp+865ntGPdjrP7/Rn+Zm9F/39xhveOdVvO8Ouz
        YG72l3C2X/8f/OQ4t+sc5OZejmy+zb/8p5zDXM+Gj1OfEddf+7Xt3K6PUNlPXFprrbXWWmuttdZar+Dd
        uz8Bfky9TxTezMcAAAAASUVORK5CYII=
</value>
  </data>
</root>